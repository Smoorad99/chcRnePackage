% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yesno_to_binary.R
\name{yesno_to_binary}
\alias{yesno_to_binary}
\title{Convert Yes/No variables to binary}
\usage{
yesno_to_binary(data, these.cols, prefix = TRUE)
}
\arguments{
\item{data}{A dataframe containing the variables to be converted.}

\item{these.cols}{A prefix used to select columns by name or a list of the exact column names. Selected columns
will have "Yes"/"No" values converted to 0/1.}

\item{prefix}{Whether or not you are using a prefix to select columns. This argument defaults to true
i.e. assumes your using a prefix unless you tell it otherwise.}
}
\value{
The original dataframe with specified Yes/No variables converted
to binary numeric values.
}
\description{
This function takes a dataframe and a prefix to identify specific columns
by their names. It converts all "Yes"/"No" responses in these columns to
binary numeric values, with "No" as 0 and "Yes" as 1.
}
\examples{
# Convert "Yes"/"No" responses in columns starting with "q14" to 0/1
df_converted <- yesno_to_binary(data = bns2_pkg_data, these.cols = "q14_", prefix = TRUE)

# View the converted dataframe side-by-side
old <- bns2_pkg_data |> dplyr::select(q14_1, q14_4)
new <- df_converted |> dplyr::select(q14_1, q14_4)
cbind(old, new)

}
